{"version":3,"sources":["layout/navbar.js","pages/homepage.js","pages/collect.js","pages/player.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","AppBar","position","style","marginBottom","Toolbar","Typography","variant","component","Button","color","to","Homepage","useState","videoData","setVideoData","page","setPage","nextPageToken","setNextPageToken","prePageToken","setPrePageToken","key","chart","part","fetchFisrtData","useCallback","axios","then","res","data","items","console","log","useEffect","localStorage","className","map","item","i","Item","like","onClick","prevPageToken","Pagination","count","hideNextButton","hidePrevButton","props","snippet","contentDetails","statistics","setLike","Collect","vData","collection","length","storageKey","getItem","push","a","id","fetchVideoData","getLikeVideoID","src","thumbnails","medium","url","alt","duration","replace","title","channelTitle","value","param","k","unit","Math","floor","pow","toFixed","Object","values","join","numberFormat","viewCount","FormControlLabel","control","Checkbox","icon","checkedIcon","onChange","event","setItem","target","name","checked","label","Play","playsInline","poster","App","exact","path","Hompage","Player","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0036ce5f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function NavBar() {\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" style={{marginBottom:10}}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">YouTube test</Typography>\r\n\r\n                    <NavLink component={Button} color=\"inherit\" to=\"/\">\r\n                        首頁\r\n                    </NavLink>\r\n                    <NavLink component={Button} color=\"inherit\" to=\"/collect\">\r\n                        我的收藏\r\n                    </NavLink>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../homepage.css\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Grid, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport NavBar from \"../layout/navbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nexport default function Homepage() {\r\n    const [videoData, setVideoData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [nextPageToken, setNextPageToken] = useState(\"\");\r\n    const [prePageToken, setPrePageToken] = useState(\"\");\r\n    const key = \"AIzaSyBKtsKRn2hkZ4_71qsmzoindLuS3Z6nGVQ\";\r\n    let maxResults = 12;\r\n    let chart = \"mostPopular\";\r\n    let part = \"snippet,contentDetails,statistics\";\r\n    const fetchData = () => {\r\n        axios(\r\n            `https://www.googleapis.com/youtube/v3/videos?&part=${part}&chart=${chart}&maxResults=${maxResults}&key=${key}`\r\n        ).then((res) => {\r\n            let data = res.data;\r\n            let items = data.items;\r\n            console.log(\"res.data\", res.data);\r\n            setNextPageToken(data.nextPageToken);\r\n            setVideoData(items);\r\n        });\r\n    };\r\n\r\n    const fetchFisrtData = useCallback(() => {\r\n        fetchData();\r\n    }, [part, chart, maxResults, key]);\r\n    useEffect(() => {\r\n        fetchFisrtData();\r\n    }, [fetchFisrtData]);\r\n    // console.log(\"videoData\", videoData);\r\n    const handleNexyPage = () => {\r\n        if (page < 9) {\r\n            axios(\r\n                `https://www.googleapis.com/youtube/v3/videos?pageToken=${nextPageToken}&part=${part}&chart=${chart}&maxResults=${maxResults}&key=${key}`\r\n            ).then((res) => {\r\n                let data = res.data;\r\n                let items = data.items;\r\n                console.log(\"res.data\", res.data);\r\n                setNextPageToken(data.nextPageToken);\r\n                setPrePageToken(data.prevPageToken);\r\n                setVideoData(items);\r\n            });\r\n            setPage(page + 1);\r\n        }\r\n    };\r\n    const handlePrePage = () => {\r\n        if (page > 1) {\r\n            axios(\r\n                `https://www.googleapis.com/youtube/v3/videos?pageToken=${prePageToken}&part=${part}&chart=${chart}&maxResults=${maxResults}&key=${key}`\r\n            ).then((res) => {\r\n                let data = res.data;\r\n                let items = data.items;\r\n                console.log(\"res.data\", res.data);\r\n                setNextPageToken(data.nextPageToken);\r\n                setPrePageToken(data.prevPageToken);\r\n                setVideoData(items);\r\n            });\r\n            setPage(page - 1);\r\n        }\r\n    };\r\n    console.log(\"localStorage\", localStorage);\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div className=\"container\">\r\n                {videoData.map((item, i) => (\r\n                    <Item item={item} key={i} like={false} />\r\n                ))}\r\n               \r\n                    <ChevronLeftIcon onClick={handlePrePage} />\r\n                    <Pagination count={9} color=\"primary\" page={page} hideNextButton hidePrevButton />\r\n                    <ChevronRightIcon onClick={handleNexyPage} />\r\n              \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Item(props) {\r\n    let snippet = props.item.snippet;\r\n    let contentDetails = props.item.contentDetails;\r\n    let statistics = props.item.statistics;\r\n    const numberFormat = function (value) {\r\n        let param = {};\r\n        let k = 10000,\r\n            sizes = [\"\", \"萬\", \"億\"],\r\n            i;\r\n        if (!value) {\r\n            return 0;\r\n        } else if (value < k) {\r\n            param.value = value;\r\n            param.unit = \"\";\r\n        } else {\r\n            i = Math.floor(Math.log(value) / Math.log(k));\r\n            param.value = (value / Math.pow(k, i)).toFixed(2);\r\n            param.unit = sizes[i];\r\n        }\r\n        return Object.values(param).join(\"\");\r\n    };\r\n\r\n    const [like, setLike] = useState(false);\r\n    const handleChange = (event) => {\r\n        localStorage.setItem(event.target.name, event.target.checked);\r\n        setLike({ ...like, [event.target.name]: event.target.checked });\r\n    };\r\n    useEffect(() => {\r\n        setLike(props.like);\r\n    }, [props]);\r\n    return (\r\n        // <Grid item md={3} sm={6} xs={12}>\r\n        <div className=\"item\">\r\n            <div>\r\n                <NavLink to=\"/player\">\r\n                    <img src={snippet.thumbnails.medium.url} alt=\"Card\" />\r\n                </NavLink>\r\n            </div>\r\n            <p>\r\n                片長:{\" \"}\r\n                {contentDetails.duration.replace(\"PT\", \"\").replace(\"H\", \"小時\").replace(\"M\", \"分\").replace(\"S\", \"秒\")}\r\n            </p>\r\n            <p>{snippet.title}</p>\r\n            <p>{snippet.channelTitle}</p>\r\n            <p>觀看次數 {numberFormat(statistics.viewCount)}次</p>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<FavoriteBorder />}\r\n                        checkedIcon={<Favorite />}\r\n                        onChange={handleChange}\r\n                        name={props.item.id}\r\n                    />\r\n                }\r\n                label=\"加入收藏\"\r\n            />\r\n        </div>\r\n        // </Grid>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"../layout/navbar\";\r\nimport { Grid, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst key = \"AIzaSyBKtsKRn2hkZ4_71qsmzoindLuS3Z6nGVQ\";\r\nlet part = \"snippet,contentDetails,statistics\";\r\nexport default function Collect() {\r\n    const [videoData, setVideoData] = useState([]);\r\n    let vData = [];\r\n    console.log(\"localStorage\", localStorage);\r\n\r\n    const getLikeVideoID = () => {\r\n        let collection = [];\r\n        for (var i = 0; i < localStorage.length; i++) {\r\n            // for (var i = 0; i < 2; i++) {\r\n            var storageKey = localStorage.key(i);\r\n            let values = localStorage.getItem(storageKey);\r\n            if (values === \"true\") {\r\n                collection.push(storageKey);\r\n            }\r\n            console.log(\"storageKey\", storageKey);\r\n        }\r\n\r\n        async function fetchVideoData() {\r\n            for (const id of collection) {\r\n                await axios(`https://www.googleapis.com/youtube/v3/videos?&part=${part}&id=${id}&key=${key}`).then(\r\n                    (res) => {\r\n                        let items = res.data.items[0];\r\n                        return vData.push(items);\r\n                    }\r\n                );\r\n            }\r\n            await setVideoData(vData);\r\n        }\r\n\r\n        fetchVideoData();\r\n    };\r\n    useEffect(() => {\r\n        getLikeVideoID();\r\n    }, []);\r\n\r\n    console.log(\"vData\", vData);\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div className=\"container\">\r\n                {videoData.map((item, i) => (\r\n                    <Item item={item} key={i} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Item(props) {\r\n    let snippet = props.item.snippet;\r\n    let contentDetails = props.item.contentDetails;\r\n    let statistics = props.item.statistics;\r\n    const numberFormat = function (value) {\r\n        let param = {};\r\n        let k = 10000,\r\n            sizes = [\"\", \"萬\", \"億\"],\r\n            i;\r\n        if (!value) {\r\n            return 0;\r\n        } else if (value < k) {\r\n            param.value = value;\r\n            param.unit = \"\";\r\n        } else {\r\n            i = Math.floor(Math.log(value) / Math.log(k));\r\n            param.value = (value / Math.pow(k, i)).toFixed(2);\r\n            param.unit = sizes[i];\r\n        }\r\n        return Object.values(param).join(\"\");\r\n    };\r\n\r\n    const [like, setLike] = useState(false);\r\n    const handleChange = (event) => {\r\n        localStorage.setItem(event.target.name, !event.target.checked);\r\n        setLike({ ...like, [event.target.name]: event.target.checked });\r\n    };\r\n    useEffect(() => {\r\n        setLike(props.like);\r\n    }, [props]);\r\n    return (\r\n        <div className=\"item\">\r\n            <div>\r\n                <NavLink to=\"/player\">\r\n                    <img src={snippet.thumbnails.medium.url} alt=\"Card\" />\r\n                </NavLink>\r\n            </div>\r\n            <p>\r\n                片長:{\" \"}\r\n                {contentDetails.duration.replace(\"PT\", \"\").replace(\"H\", \"小時\").replace(\"M\", \"分\").replace(\"S\", \"秒\")}\r\n            </p>\r\n            <p>{snippet.title}</p>\r\n            <p>{snippet.channelTitle}</p>\r\n            <p>觀看次數 {numberFormat(statistics.viewCount)}次</p>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<Favorite />}\r\n                        checkedIcon={<FavoriteBorder />}\r\n                        onChange={handleChange}\r\n                        name={props.item.id}\r\n                    />\r\n                }\r\n                label=\"取消收藏\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport NavBar from \"../layout/navbar\";\r\nimport \"../../node_modules/video-react/dist/video-react.css\";\r\nimport { Player } from \"video-react\";\r\nexport default function Play() {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <Player playsInline poster=\"/assets/poster.png\" src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\" />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Hompage from \"./pages/homepage\";\nimport Collect from \"./pages/collect\";\nimport Player from \"./pages/player\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Hompage} />\n            <Route exact path=\"/collect\" component={Collect} />\n            <Route exact path=\"/player\" component={Player} />\n        </Switch>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}